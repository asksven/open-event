# Generated by Otto, do not edit!
#
# This is a Vagrantfile that represents a single layer of a multi-layered
# dev environment. Do not modify, boot, or destroy this environment since
# it can corrupt other environments very easily.

Vagrant.configure("2") do |config|
  
  if ENV["OTTO_VAGRANT_LAYER_PATH"]
    config.vm.clone = ENV["OTTO_VAGRANT_LAYER_PATH"]
  else
    config.vm.box = "hashicorp/precise64"
    config.vm.box_check_update = false
    config.vm.provider :parallels do |p, o|
      o.vm.box = "parallels/ubuntu-12.04"
    end
  end
  

  # ScriptPacks
  dir = "/otto/scriptpacks"
  config.vm.provision "shell", inline: "sudo rm -rf #{dir}; sudo mkdir -p #{dir}; sudo chmod 0777 #{dir}"
  

  # Use a linked clone if we can
  config.vm.provider "virtualbox" do |v|
    v.linked_clone = true
  end

  if Vagrant.has_plugin?("vagrant-parallels", ">= 1.6.0")
    config.vm.provider "parallels" do |p|
      p.linked_clone = true
    end
  end

  # Disable the default synced folder
  config.vm.synced_folder ".", "/vagrant", disabled: true

  
  # Install Go build environment
  config.vm.provision "shell", inline: $script_app

end


$script_app = <<SCRIPT
set -e

oe() { $@ 2>&1 | logger -t otto > /dev/null; }
ol() { echo "[otto] $@"; }

ol "Updating Apt repo..."
export DEBIAN_FRONTEND=noninteractive
oe sudo apt-get update -y

ol "Downloading Node 4.1.0..."
oe wget -q -O /home/vagrant/node.tar.gz https://nodejs.org/dist/v4.1.0/node-v4.1.0-linux-x64.tar.gz

ol "Untarring Node..."
oe sudo tar -C /opt -xzf /home/vagrant/node.tar.gz

ol "Setting up PATH..."
oe sudo ln -s /opt/node-v4.1.0-linux-x64/bin/node /usr/local/bin/node
oe sudo ln -s /opt/node-v4.1.0-linux-x64/bin/npm /usr/local/bin/npm

ol "Installing build-essential for native packages..."
oe sudo apt-get install -y build-essential

ol "Installing GCC/G++ 4.8 (required for newer Node versions)..."
oe sudo apt-get install -y python-software-properties software-properties-common
oe sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
oe sudo apt-get update -y
oe sudo update-alternatives --remove-all gcc
oe sudo update-alternatives --remove-all g++
oe sudo apt-get install -y gcc-4.8
oe sudo apt-get install -y g++-4.8
oe sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20
oe sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20
oe sudo update-alternatives --config gcc
oe sudo update-alternatives --config g++

ol "Installing Git..."
oe sudo apt-get install -y git

SCRIPT

